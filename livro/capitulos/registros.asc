== Registros

.Objetivos do capítulo
____________________
Ao final deste capítulo você deverá ser capaz de:

* Criar registros em C
* Manipular registros
____________________

Neste lugar você deve apresentar o conteúdo em forma de diálogo.

NOTE: Para começar a escrever um novo capítulo, copie este arquivo e 
salve com outro nome (não utilize espaço no nome do arquivo). Em seguida,
atualize o arquivo *livro.asc* para incluir o novo arquivo criado. 
Consulte o manual.


=== Necessidade dos registros

Para compreender a nessecidade de estruturação dos dados vamos tentar escrever
um programa com a seguinte descrição:

____________________
Escrever um programa que leia os dados (nome, matrícula, nota1 e nota2) de 5 
alunos. Em seguida, imprima a matrícula, o nome e a média de cada aluno com
média inferior a 7.
____________________

Com a descrição do problema vamos elaborar um pseudo-código para o nosso 
programa:


------------------
PARA i=1 até 5
  LEIA nome[i]
  LEIA matricula[i]
  LEIA primeira_nota[i]
  LEIA segunda_nota[i]
FIM_PARA

PARA i=1 até 5
  media = (primeira_nota[i] + segunda_nota[2])/2
  SE media < 7 ENTÃO
    imprime matricula[i]
    imprime nome[i]
    imprime media
  FIM_SE
FIM_PARA
------------------

TIP: Uso de primeira_nota e segunda_nota ao invés de nota1 e nota2.


Pseudo-código do mesmo programa utilizando Registros:

------------------
REGISTRO Aluno
  nome
  matricula
  notas[2]
REGISTRO_FIM

PARA i=1 até 5
  LEIA alunos[i].nome
  LEIA alunos[i].matricula
  LEIA alunos[i].notas[1]
  LEIA alunos[i].notas[2]
FIM_PARA

PARA i=1 até 5
  media = (alunos[i].notas[1] + alunos[i].notas[2])/2
  SE media < 7 ENTÃO
    imprime alunos[i].matricula
    imprime alunos[i].nome
    imprime media
  FIM_SE
FIM_PARA
------------------


____________________
Escreva um programa que simule contas bancárias, com as seguintes especificações:
- Ao iniciar o programa vamos criar contas bancárias para três clientes.
-- Cada conta terá o nome do cliente associado a ela.
-- No ato da criação da conta o cliente precisará fazer um depósito inicial.
-- Cada conta criada terá um número de conta diferente e que será atribuido 
automaticamente pelo sistema.
- Em seguida, poderemos realizar saques ou depósitos nas contas informando o
número da conta.
-- Sempre que uma operação de saque ou depósito seja realizada, o sistema deverá
imprimir o nome do titular e o saldo final da conta.
____________________



------------------
REGISTRO Conta
  nome
  cpf
  saldo
REGISTRO_FIM

PARA i=1 até 3
  Imprima "Informe o nome, o CPF e o valdor do depósito inical:"
  LEIA contas[i].nome
  LEIA contas[i].cpf
  LEIA contas[i].saldo
FIM_PARA

ENQUANTO verdade ENTÃO
  Imprima "Informe a operação, o CPF do dono da conta e o valor:"
  LEIA operacao
  LEIA cpf
  LEIA valor
  x = -1
  PARA i até 3
    SE contas[i].cpf == cpf ENTÃO
      x = i
  FIM_PARA
  SE x==-1 ENTÃO
    Imprima "Conta deste CPF não existe:", cpf
  SENÃO
    SE operacao == 'saque' ENTÃO
      contas[x].saldo -= valor
    SE operacao == 'deposito' ENTÃO
      contas[x].saldo += valor
    FIM_SE
    Imprima "Titular da conta: ", contas[i].nome
    Imprima "Saldo atual: ", contas[i].saldo
  FIM_SE

FIM_ENQUANTO
------------------




------------------
REGISTRO Automovel
  codigo
  modelo
  quantidade_de_portas
  arcondicionado
  vidros_eletricos
  ano
  valor
  vendido
REGISTRO_FIM

PARA i=1 até 5
  Imprima "Informe as características do carro:"
  altomoveis[i].codigo = i
  LEIA altomoveis[i].modelo
  LEIA altomoveis[i].quantidade_de_portas
  LEIA altomoveis[i].arcondicionado
  LEIA altomoveis[i].vidros_eletricos
  LEIA altomoveis[i].ano
  LEIA altomoveis[i].valor
  altomoveis[i].vendido = falso
FIM_PARA

comprar = verdade

ENQUANTO comprar ENTÃO
  Imprima "Comprar ou Sair?"
  LEIA operacao
  SE operacao == "comprar" ENTÃO
    // Listando os altomoveis
    PARA i=1 até 5
      SE NÃO altomoveis[i].vendido ENTÃO
        Imprima altomoveis[i].codigo
        Imprima altomoveis[i].modelo
        Imprima altomoveis[i].quantidade_de_portas
        Imprima altomoveis[i].arcondicionado
        Imprima altomoveis[i].vidros_eletricos
        Imprima altomoveis[i].ano
        Imprima altomoveis[i].valor
    FIM_PARA
    Imprima "Qual o código do altomovel que deseja comprar?"
    LEIA codigo
    altomoveis[codigo].vendido = verdade
    Imprima "Automóvel vendido!"

  SE operacao == "sair" ENTÃO
    comprar = falso
  FIM_SE
FIM_ENQUANTO
------------------



////

Produto
-nome
-codigo
-valor_unitario

ItemDeCompra
-codigo_produto
-unidades

Lista de Compras
-quantidade_de_produtos
-items
-valor_total

Exemplos de registro:

Animal
-codigo
-sexo
-tipo (gato, cachorro, porco, bode)
-peso

Ponto
-x
-y


Endereço
-cidade
-estado
-cep





Quadrilatero
-p1
-p2
-p3
-p4

Triangulo
-p1
-p2
-p3


Produto
-Nome
-Preço
-Quantidade


Cliente
-codigo
-nome

Filme
-nome
-alugado s/n
-codigo_do_cliente



10. A organização de um evento esportivo deseja um programa que faça a 
leitura do nome e a pontuação de cada um dos 10 participantes e exiba o nome 
do vencedor. Elabore este programa.

11. O supermercado Excelente Preço está precisando ser informatizado. Neste 
sentido, o dono quer um programa que leia os preços dos produtos até que seja 
informado o valor zero. No final o programa deve informar o total da compra e 
perguntar a forma de pagamento. As opções da forma de pagamento são: 1) A 
vista; 2) No cartão de crédito. Se a opção escolhida for a vista, então o 
programa informa o valor da compra com um desconto de 5%. Caso a compra seja no 
cartão de crédito, o programa informa o valor da compra dividido em 4 vezes.


////


=== Minha primeira seção

Texto da sua seção.

==== Exemplo de subseção
Texto da subseção.

=== Minha segunda seção

Texto da sua seção.

=== Recapitulando

Revisão do que foi aprendido.

Reserve o último parágrafo para realizar uma *ponte* para o próximo capítulo.

=== Atividades


. Texto da atividade.

. Texto da atividade.

. Texto da atividade.

. Escrever um programa que leia dois pontos e calcule a distância entre eles.
Utilize uma estrutura para armazenar as coordenadas x e y.
+
TIP: A biblioteca math contém a função de calcular a raiz.

. Escrever um programa que leia 3 pontos e informe:
.. Se os três pontos lidos formam um triangulo.Lembre-se três pontos não formam um
triangulo se somente se eles pertencerem a uma mesma reta.
.. Se formam um triangulo equilátero (três lados iguais)
.. Se formam um triangulo isócelis (dois lados iguais)
.. Se formam um triangulo escaleno (todos os lados diferentes)


. Utilizando os registros abaixo, faça um programa que calcule o perímetro do
quadrilatero:
+
-----------------
REGISTRO Ponto
  x
  y
REGISTRO_FIM

REGISTRO Quadrilatero
  Ponto pontoA;
  Ponto pontoB;
  Ponto pontoC;
  Ponto pontoD;
REGISTRO_FIM
-----------------
+
[TIP]
==========
A área de um 
==========
// perímetro: vários pontos.

. Modifique o programa da conta bancária, para adicionar um tipo de conta.
Somente as contas do tipo especial poderão realizar saques cujo o saldo final
seja negativo. Caso a conta não seja especial, não autorize o saque.

// Sempre termine os arquivos com uma linha em branco.

