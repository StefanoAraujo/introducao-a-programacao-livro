
////
Referencia:
INTRODUÇÃO À LINGUAGEM C
Versão 2.0

INTRODUÇÃO A LINGUAGEM C
GACLI - CENTRO DE COMPUTAÇÃO - UNICAMP
http://www.fsc.ufsc.br/~canzian/root/tutorial-c-unicamp.pdf


10. Programação Estruturada (Modularização)
http://www.facom.ufu.br/~gustavo/IC/Programacao/Apostila_Algoritmos.pdf

EMENTA de Introdução a Programação:

Histórico das linguagens de programação. 
Descrição e construção de algoritmos. 
Metodologia de programação. 
Introdução a uma linguagem de programação moderna: 
	tipos elementares e compostos de dados; 
	operadores;
	expressões e funções; 
	mecanismos de passagem de parâmetros; 
	variáveis e comandos; 
	procedimentos; recursividade; 
	tipos definidos pelo programador e
	tipos abstratos de dados; 
	noções de estruturas dinâmicas de dados.
Aplicações práticas.

*  9184-0366
http://www.cprogressivo.net/2013/02/O-que-e-para-que-serve-e-como-usar-e-declarar-funcao-em-C.html

////

== Funções


[IMPORTANT]
====
Nesta capítulo vamos *descatar a utilização de pseudocódigos*. Agora que você já
possui um conhecimento básico sobre a linguagem C e provavelmente escreveu alguns
programas nela, consideramos que não haverá mais necessidade de 
apresentar sintaxes para pseudocódigos. Portanto, neste capítulo em diante, o conteúdo 
apresentadao utilizará somente a sintaxe da linguagem C.
====



=== O que são funções

Uma função em C pode ser compreendida sobre diversos aspectos:

* as funções correspondem a abstrações para trechos de programas



[NOTE]
.Revisão
====
Lembre-se que durante o curso você já utilizou funções diversas vezes,
o que nós sabemos sobre funções até agora?

* Uma função implementa um comportamento que pode ser reutilizado;
* Para executar uma função, utilizamos o nome da função e passamos alguns 
parâmetros entre parênteses e separados por vírgula. Exemplo: `printf("R$ %1.2f", preco)`;
* A função `printf` é utilizada para imprimir texto na saída;
* As funções `scanf` e `getchar` para ler dados da entrada;
* As funções `strlen`, `strcpy`, `strcat` e `strchr` são utilizadas para 
manipular strings;
* As ((funções)) são agrupadas em ((bibliotecas)). Exemplo; `stdio`;
====



=== Criando funções para reutilizar código



Até agora os programas que escrevemos continha um único método `main`, e todo
nosso código era escrito dentro dele.


////
http://www.slideshare.net/MMSequeira/semana-2-6479012
-- funções não devem ter efeito colaterais
--- escrever no teclado

função sem parâmetro
função com parametros
função com retorno


C s ̃o procedimen-
co
co
a
tos que podem ser executados por outros c ́digos (outras fun ̧ ̃es)


////




=== Retorno de Valores 
texto.

=== Escopo de Variáveis 
texto.

=== Passagem de Parâmetros 
texto.

==== Por Valor
texto.

==== Por Referência
texto.

=== Reunindo tudo
texto.


Passing Arguments
Methods of Passing Arguments
Passing by Value
Passing by Address

Using Return Values and Prototypes
Returning Values
The Return Data Type
One Last Step: Prototype
Wrapping Things Up
Funções recursivas
